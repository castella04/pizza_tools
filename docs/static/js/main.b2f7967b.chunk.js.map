{"version":3,"sources":["logo.svg","components/radiobutton.jsx","components/operationManagement.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","RadioButton","_ref","options","selectedValue","setSelectedValue","React","createElement","map","option","key","value","type","checked","onChange","required","label","OperationManagement","storeName","setStoreName","useState","carID","setCarID","ODO","setODO","light","setLight","checkLamp","setCheckLamp","fuel","setFuel","carStatus","setCarStatus","driverName","setDriverName","license","setLicense","licenseBase64","setLicenseBase64","submitTime","setSubmitTime","availableCarID","2584","2601","class","onSubmit","async","e","preventDefault","formattedTime","Date","toLocaleString","timeZone","replace","data","console","log","JSON","stringify","fetch","mode","method","headers","Content-Type","body","ok","alert","error","target","disabled","ID","index","placeholder","accept","file","files","reader","FileReader","onloadend","result","split","readAsDataURL","App","className","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8JCqBzBC,MAnBf,SAAoBC,GAA+C,IAA9CC,QAAEA,EAAOC,cAAEA,EAAaC,iBAAEA,GAAkBH,EAC7D,OACII,IAAAC,cAAA,WACKJ,EAAQK,IAAKC,GACVH,IAAAC,cAAA,SAAOG,IAAKD,EAAOE,OACfL,IAAAC,cAAA,SACIK,KAAK,QACLD,MAAOF,EAAOE,MACdE,QAAST,IAAkBK,EAAOE,MAClCG,SAAUA,IAAMT,EAAiBI,EAAOE,OACxCI,UAAQ,IAEXN,EAAOO,UCwMbC,MAnNf,WACI,MAAOC,EAAWC,GAAgBC,mBAAS,KACpCC,EAAOC,GAAYF,mBAAS,KAC5BG,EAAKC,GAAUJ,mBAAS,KACxBK,EAAOC,GAAYN,mBAAS,KAC5BO,EAAWC,GAAgBR,mBAAS,KACpCS,EAAMC,GAAWV,mBAAS,KAC1BW,EAAWC,GAAgBZ,mBAAS,KACpCa,EAAYC,GAAiBd,mBAAS,KACtCe,EAASC,GAAchB,mBAAS,KAChCiB,EAAeC,GAAoBlB,mBAAS,KAC5CmB,EAAYC,GAAiBpB,mBAAS,MAQvCqB,EAAiBvB,EALE,CACrBwB,KAAQ,CAAC,OAAQ,OAAQ,OAAQ,UACjCC,KAAQ,CAAC,OAAQ,OAAQ,OAAQ,WAGezB,GAAa,GA0DjE,OACIZ,IAAAC,cAAA,OAAKqC,MAAM,YACPtC,IAAAC,cAAA,QAAMsC,SA1DOC,UAGjBC,EAAEC,iBACF,MACMC,GADc,IAAIC,MAAOC,eAAe,QAAS,CAACC,SAAU,eAChCC,QAAQ,MAAO,KAAKA,QAAQ,KAAM,IAAIA,QAAQ,MAAO,KACvFb,EAAcS,GAEd,MAAMK,EAAO,CACTpC,YACAG,QACAE,MACAE,QACAE,YACAE,OACAE,YACAE,aACAI,gBACAE,WAAYU,GAGhBM,QAAQC,IAAI,0BAAYC,KAAKC,UAAUJ,EAAM,KAAM,IAElD,WAC0BK,MAAM,mCAAoC,CAC7DC,KAAM,OACNC,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMP,KAAKC,UAAUJ,MAEZW,GACTC,MAAM,wFAENA,MAAM,4EAEZ,MAAOC,GACLZ,QAAQY,MAAM,SAAUA,GACxBD,MAAM,iGAsBF5D,IAAAC,cAAA,aAAO,sBAEHD,IAAAC,cAAA,UACII,MAAOO,EACPJ,SAAWiC,IACP5B,EAAa4B,EAAEqB,OAAOzD,OACtBW,EAAS,KAEbP,UAAQ,GAERT,IAAAC,cAAA,UAAQI,MAAM,IAAG,oDACjBL,IAAAC,cAAA,UAAQI,MAAM,QAAO,4BACrBL,IAAAC,cAAA,UAAQI,MAAM,QAAO,oCAG7BL,IAAAC,cAAA,WAEAD,IAAAC,cAAA,aAAO,8CAEHD,IAAAC,cAAA,UACII,MAAOU,EACPP,SAAWiC,GAAMzB,EAASyB,EAAEqB,OAAOzD,OACnC0D,UAAWnD,EACXH,UAAQ,GAERT,IAAAC,cAAA,UAAQI,MAAM,IAAG,oDAChB8B,EAAejC,IAAI,CAAC8D,EAAIC,IACrBjE,IAAAC,cAAA,UAAQG,IAAK6D,EAAO5D,MAAO2D,GAAKA,MAI5ChE,IAAAC,cAAA,WAEAD,IAAAC,cAAA,aAAO,kCAEHD,IAAAC,cAAA,SACIK,KAAK,OACLD,MAAOY,EACPT,SAAWiC,GAAMvB,EAAOuB,EAAEqB,OAAOzD,OACjC6D,YAAY,eACZzD,UAAQ,IACV,MAGNT,IAAAC,cAAA,WAEAD,IAAAC,cAAA,aAAO,qEAEHD,IAAAC,cAACN,EAAW,CACRE,QACI,CACI,CAACa,MAAO,eAAML,MAAO,KACrB,CAACK,MAAO,qBAAOL,MAAO,MAG9BP,cAAeqB,EACfpB,iBAAkBqB,KAI1BpB,IAAAC,cAAA,aAAO,uFAEHD,IAAAC,cAACN,EAAW,CACRE,QACI,CACI,CAACa,MAAO,eAAML,MAAO,KACrB,CAACK,MAAO,qBAAOL,MAAO,MAG9BP,cAAeuB,EACftB,iBAAkBuB,KAI1BtB,IAAAC,cAAA,aAAO,yDAEHD,IAAAC,cAACN,EAAW,CACRE,QACI,CACI,CAACa,MAAO,eAAML,MAAO,KACrB,CAACK,MAAO,qBAAOL,MAAO,MAG9BP,cAAeyB,EACfxB,iBAAkByB,KAI1BxB,IAAAC,cAAA,aAAO,kCAEHD,IAAAC,cAAA,SACIK,KAAK,OACLD,MAAOoB,EACPjB,SAAWiC,GAAMf,EAAae,EAAEqB,OAAOzD,OACvC6D,YAAY,6CACZzD,UAAQ,KAGhBT,IAAAC,cAAA,WAEAD,IAAAC,cAAA,aAAO,wCAEHD,IAAAC,cAAA,SACIK,KAAK,OACLD,MAAOsB,EACPnB,SAAWiC,GAAMb,EAAca,EAAEqB,OAAOzD,OACxC6D,YAAY,iCACZzD,UAAQ,KAGhBT,IAAAC,cAAA,WAEAD,IAAAC,cAAA,aAAO,6FAEHD,IAAAC,cAAA,WACAD,IAAAC,cAAA,SACIK,KAAK,OACL6D,OAAO,wBACP3D,SAxIMiC,IACtB,MAAM2B,EAAO3B,EAAEqB,OAAOO,MAAM,GAC5B,IAAID,EACA,OAGJ,MAAME,EAAS,IAAIC,WACnBD,EAAOE,UAAY,MACfxC,EAAiBsC,EAAOG,OAAOC,MAAM,KAAK,MAE9CJ,EAAOK,cAAcP,IA+HL3D,UAAQ,KAGhBT,IAAAC,cAAA,WAEAD,IAAAC,cAAA,UAAQK,KAAK,UAAS,yBC7LvBsE,MAZf,WACE,OACE5E,IAAAC,cAAA,OAAK4E,UAAU,OACb7E,IAAAC,cAAC6E,IAAa,KACb9E,IAAAC,cAAC8E,IAAM,KACN/E,IAAAC,cAAC+E,IAAK,CAACC,KAAK,WAAWC,QAASlF,IAAAC,cAACU,EAAmB,YCC7CwE,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC5F,EAAAgD,EAAA,GAAA6C,KAAA7F,EAAA8F,KAAA,UAAqBD,KAAK1F,IAAiD,IAAhD4F,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAShG,EACpE4F,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjG,IAAAC,cAACD,IAAMkG,WAAU,KACflG,IAAAC,cAAC2E,EAAG,QAORO","file":"static/js/main.b2f7967b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react';\n\nfunction RadioButton({ options, selectedValue, setSelectedValue }) {\n    return (\n        <div>\n            {options.map((option) => (\n                <label key={option.value}>\n                    <input\n                        type=\"radio\"\n                        value={option.value}\n                        checked={selectedValue === option.value}\n                        onChange={() => setSelectedValue(option.value)}\n                        required\n                    />\n                    {option.label}\n                </label>\n            ))}\n        </div>\n    );\n}\n\nexport default RadioButton;","import React, { useState } from 'react';\nimport RadioButton from './radiobutton';\n\nfunction OperationManagement() {\n    const [storeName, setStoreName] = useState('');\n    const [carID, setCarID] = useState('');\n    const [ODO, setODO] = useState('');\n    const [light, setLight] = useState('');\n    const [checkLamp, setCheckLamp] = useState('');\n    const [fuel, setFuel] = useState('');\n    const [carStatus, setCarStatus] = useState('');\n    const [driverName, setDriverName] = useState('');\n    const [license, setLicense] = useState('');\n    const [licenseBase64, setLicenseBase64] = useState('');\n    const [submitTime, setSubmitTime] = useState(null);\n    \n\n    const carIDByStoreName = {\n        '2584': ['2633', '2634', '2660', '車'],\n        '2601': ['2004', '2005', '2006', '車']\n    };\n\n    const availableCarID = storeName ? carIDByStoreName[storeName] : [];\n\n    const handleSubmit = async (e) => {\n\n        \n        e.preventDefault();\n        const currentTime = new Date().toLocaleString('ja-JP', {timeZone: 'Asia/Tokyo'});\n        const formattedTime = currentTime.replace(/\\//g, '-').replace(/,/g, '').replace(/\\s/g, '-');\n        setSubmitTime(formattedTime);\n\n        const data = {\n            storeName,\n            carID,\n            ODO,\n            light,\n            checkLamp,\n            fuel,\n            carStatus,\n            driverName,\n            licenseBase64,\n            submitTime: formattedTime\n        };\n\n        console.log('JSONデータ:', JSON.stringify(data, null, 2));\n\n         try {\n            const response = await fetch('https://casteira.com:4160/omdata', {\n                mode: \"cors\",\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(data)\n            });\n            if (response.ok) {\n                alert('データが正常に送信されました');\n            } else {\n                alert('送信エラーが発生しました');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            alert('サーバーへの接続に失敗しました');\n        }\n    }\n\n    const handleInputImage = (e) => {\n        const file = e.target.files[0];\n        if(!file) {\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            setLicenseBase64(reader.result.split(',')[1]);\n        };\n        reader.readAsDataURL(file);\n\n\n    }\n\n    return (\n        <div class=\"all-wrap\">\n            <form onSubmit={handleSubmit}>\n                <label>\n                    店舗名:\n                    <select\n                        value={storeName}\n                        onChange={(e) => {\n                            setStoreName(e.target.value);\n                            setCarID('');\n                        }}\n                        required\n                    >\n                        <option value=\"\">選択してください</option>\n                        <option value=\"2584\">飯塚楽市</option>\n                        <option value=\"2601\">飯塚近大前</option>\n                    </select>\n                </label>\n                <br/>\n\n                <label>\n                    車両のナンバー:\n                    <select \n                        value={carID} \n                        onChange={(e) => setCarID(e.target.value)}\n                        disabled={!storeName}\n                        required\n                    >\n                        <option value=\"\">選択してください</option>\n                        {availableCarID.map((ID, index) => (\n                            <option key={index} value={ID}>{ID}</option>\n                        ))}\n                    </select>\n                </label>\n                <br/>\n\n                <label>\n                    総走行距離:\n                    <input\n                        type=\"text\"\n                        value={ODO}\n                        onChange={(e) => setODO(e.target.value)}\n                        placeholder='入力'\n                        required\n                    />\n                    km\n                </label>\n                <br/>\n\n                <label>\n                    ライトは点灯しますか？\n                    <RadioButton \n                        options={\n                            [\n                                {label: 'はい', value: '1'},\n                                {label: 'いいえ', value: '0'}\n                            ]\n                        }\n                        selectedValue={light}\n                        setSelectedValue={setLight} \n                    />\n                </label>\n\n                <label>\n                    警告灯は点灯していませんか？\n                    <RadioButton \n                        options={\n                            [\n                                {label: 'はい', value: '1'},\n                                {label: 'いいえ', value: '0'}\n                            ]\n                        }\n                        selectedValue={checkLamp}\n                        setSelectedValue={setCheckLamp}\n                    />\n                </label>\n\n                <label>\n                    燃料は十分ですか？\n                    <RadioButton \n                        options={\n                            [\n                                {label: 'はい', value: '1'},\n                                {label: 'いいえ', value: '0'}\n                            ]\n                        }\n                        selectedValue={fuel}\n                        setSelectedValue={setFuel}\n                    />\n                </label>\n\n                <label>\n                    車両の状態:\n                    <input\n                        type=\"text\"\n                        value={carStatus}\n                        onChange={(e) => setCarStatus(e.target.value)}\n                        placeholder='何かあれば記入'\n                        required\n                    />\n                </label>\n                <br/>\n\n                <label>\n                    ドライバー名:\n                    <input\n                        type=\"text\"\n                        value={driverName}\n                        onChange={(e) => setDriverName(e.target.value)}\n                        placeholder='名前を入力'\n                        required\n                    />\n                </label>\n                <br/>\n                \n                <label>\n                    免許証の写真を撮影してください\n                    <br/>\n                    <input\n                        type=\"file\"\n                        accept=\"image/png, image/jpeg\"\n                        onChange={handleInputImage}\n                        required\n                    />\n                </label>\n                <br/>\n\n                <button type=\"submit\">送信</button>\n\n            </form>\n        </div>\n    )\n}\n\nexport default OperationManagement;","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport logo from './logo.svg';\nimport OperationManagement from './components/operationManagement';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n       <Routes>\n        <Route path='/opemane' element={<OperationManagement />}/>\n       </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}