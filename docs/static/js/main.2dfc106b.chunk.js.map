{"version":3,"sources":["logo.svg","components/radiobutton.jsx","components/operationManagement.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","RadioButton","_ref","options","selectedValue","setSelectedValue","React","createElement","map","option","key","value","type","checked","onChange","label","OperationManagement","storeName","setStoreName","useState","carID","setCarID","ODO","setODO","light","setLight","checkLamp","setCheckLamp","fuel","setFuel","carStatus","setCarStatus","driverName","setDriverName","license","setLicense","licenseBase64","setLicenseBase64","submitTime","setSubmitTime","availableCarID","2584","2601","class","onSubmit","async","e","preventDefault","currentTime","Date","toISOString","data","console","log","JSON","stringify","fetch","method","headers","Content-Type","body","ok","alert","error","target","disabled","ID","index","placeholder","file","files","reader","FileReader","onloadend","result","split","readAsDataURL","App","className","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2dfc106b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react';\n\nfunction RadioButton({ options, selectedValue, setSelectedValue }) {\n    return (\n        <div>\n            {options.map((option) => (\n                <label key={option.value}>\n                    <input\n                        type=\"radio\"\n                        value={option.value}\n                        checked={selectedValue === option.value}\n                        onChange={() => setSelectedValue(option.value)}\n                    />\n                    {option.label}\n                </label>\n            ))}\n        </div>\n    );\n}\n\nexport default RadioButton;","import React, { useState } from 'react';\nimport RadioButton from './radiobutton';\n\nfunction OperationManagement() {\n    const [storeName, setStoreName] = useState('');\n    const [carID, setCarID] = useState('');\n    const [ODO, setODO] = useState('');\n    const [light, setLight] = useState('');\n    const [checkLamp, setCheckLamp] = useState('');\n    const [fuel, setFuel] = useState('');\n    const [carStatus, setCarStatus] = useState('');\n    const [driverName, setDriverName] = useState('');\n    const [license, setLicense] = useState('');\n    const [licenseBase64, setLicenseBase64] = useState('');\n    const [submitTime, setSubmitTime] = useState(null);\n    \n\n    const carIDByStoreName = {\n        '2584': ['2633', '2634', '2660', '車'],\n        '2601': ['2004', '2005', '2006', '車']\n    };\n\n    const availableCarID = storeName ? carIDByStoreName[storeName] : [];\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const currentTime = new Date().toISOString();\n        setSubmitTime(currentTime);\n\n        const data = {\n            storeName,\n            carID,\n            ODO,\n            light,\n            checkLamp,\n            fuel,\n            carStatus,\n            driverName,\n            licenseBase64,\n            submitTime: currentTime\n        };\n\n        console.log('JSONデータ:', JSON.stringify(data, null, 2));\n\n         try {\n            const response = await fetch('http://180.59.88.128:4160/omdata', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(data)\n            });\n            if (response.ok) {\n                alert('データが正常に送信されました');\n            } else {\n                alert('送信エラーが発生しました');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            alert('サーバーへの接続に失敗しました');\n        }\n    }\n\n    const handleInputImage = (e) => {\n        const file = e.target.files[0];\n        if(!file) {\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            setLicenseBase64(reader.result.split(',')[1]);\n        };\n        reader.readAsDataURL(file);\n\n\n    }\n\n    return (\n        <div class=\"all-wrap\">\n            <form onSubmit={handleSubmit}>\n                <label>\n                    店舗名:\n                    <select\n                        value={storeName}\n                        onChange={(e) => {\n                            setStoreName(e.target.value);\n                            setCarID('');\n                        }}\n                    >\n                        <option value=\"\">選択してください</option>\n                        <option value=\"2584\">飯塚楽市</option>\n                        <option value=\"2601\">飯塚近大前</option>\n                    </select>\n                </label>\n                <br/>\n\n                <label>\n                    車両のナンバー:\n                    <select value={carID} onChange={(e) => setCarID(e.target.value)}\n                    disabled={!storeName}\n                    >\n                        <option value=\"\">選択してください</option>\n                        {availableCarID.map((ID, index) => (\n                            <option key={index} value={ID}>{ID}</option>\n                        ))}\n                    </select>\n                </label>\n                <br/>\n\n                <label>\n                    総走行距離:\n                    <input\n                        type=\"text\"\n                        value={ODO}\n                        onChange={(e) => setODO(e.target.value)}\n                        placeholder='入力'\n                    />\n                    km\n                </label>\n                <br/>\n\n                <label>\n                    ライトは点灯しますか？\n                    <RadioButton \n                        options={\n                            [\n                                {label: 'はい', value: '1'},\n                                {label: 'いいえ', value: '0'}\n                            ]\n                        }\n                        selectedValue={light}\n                        setSelectedValue={setLight}    \n                    />\n                </label>\n\n                <label>\n                    警告灯は点灯していませんか？\n                    <RadioButton \n                        options={\n                            [\n                                {label: 'はい', value: '1'},\n                                {label: 'いいえ', value: '0'}\n                            ]\n                        }\n                        selectedValue={checkLamp}\n                        setSelectedValue={setCheckLamp}\n                    />\n                </label>\n\n                <label>\n                    燃料は十分ですか？\n                    <RadioButton \n                        options={\n                            [\n                                {label: 'はい', value: '1'},\n                                {label: 'いいえ', value: '0'}\n                            ]\n                        }\n                        selectedValue={fuel}\n                        setSelectedValue={setFuel}\n                    />\n                </label>\n\n                <label>\n                    車両の状態:\n                    <input\n                        type=\"text\"\n                        value={carStatus}\n                        onChange={(e) => setCarStatus(e.target.value)}\n                        placeholder='何かあれば記入'\n                    />\n                </label>\n                <br/>\n\n                <label>\n                    ドライバー名:\n                    <input\n                        type=\"text\"\n                        value={driverName}\n                        onChange={(e) => setDriverName(e.target.value)}\n                        placeholder='名前を入力'\n                    />\n                </label>\n                <br/>\n                \n                <label>\n                    免許証の写真を撮影してください\n                    <br/>\n                    <input\n                        type=\"file\"\n                        onChange={handleInputImage}\n                    />\n                </label>\n                <br/>\n\n                <button type=\"submit\">送信</button>\n\n            </form>\n        </div>\n    )\n}\n\nexport default OperationManagement;","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport logo from './logo.svg';\nimport OperationManagement from './components/operationManagement';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n       <Routes>\n        <Route path='/opemane' element={<OperationManagement />}/>\n       </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}